name: Release and Publish

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Validate version
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "Error: Tag version ($TAG_VERSION) doesn't match package.json version ($PACKAGE_VERSION)"
          exit 1
        fi
    
    - name: Extract changelog
      id: changelog
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        # Extract changelog section for this version
        CHANGELOG=$(awk "/## \[$TAG_VERSION\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md)
        # Escape for GitHub Actions
        CHANGELOG="${CHANGELOG//'%'/'%25'}"
        CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
        CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
        echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## What's Changed
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          ```bash
          npm install @albertogferrario/stockx-api@${{ github.ref_name }}
          ```
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.9...${{ github.ref_name }}
        draft: false
        prerelease: false
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}